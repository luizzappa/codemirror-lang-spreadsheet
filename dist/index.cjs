'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lr = require('@lezer/lr');
var language = require('@codemirror/language');
var highlight = require('@lezer/highlight');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const intersecop = 38,
  Separator$1 = 1,
  decimalSeparator$1 = 39,
  arrayRowSeparator = 40,
  RefErrorToken = 2,
  ErrorToken = 3,
  BoolToken = 4;

/* Hand-written tokenizers for excel formula tokens that can't be
  expressed by lezer's built-in tokenizer (or are harder to express). */
const backSlash = 92, comma = 44, closeParen = 41, dot = 46, euroSign = 8364, openParen = 40, questionMark = 63, semiColon = 59, underscore = 95, isAsciiLeter = (charCode) => {
    return ((charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122));
}, isDigit = (charCode) => charCode >= 48 && charCode <= 57, isSpace = (charCode) => {
    return ([
        9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196,
        8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288
    ].indexOf(charCode) !== -1);
};
let currDecimalSeparator = '.';
let currIdiom = 'en-US';
// Always uppercase
// Source: https://en.excel-translator.de/
const i18n = {
    BoolToken: {
        'en-US': ['TRUE', 'FALSE'],
        'pt-BR': ['VERDADEIRO', 'FALSO']
    },
    RefErrorToken: {
        'en-US': '#REF!',
        'pt-BR': '#REF!'
    },
    ErrorToken: {
        'en-US': [
            '#NULL!',
            '#DIV/0!',
            '#VALUE!',
            '#NAME?',
            '#NUM!',
            '#N/A',
            '#GETTING_DATA',
            '#SPILL!'
        ],
        'pt-BR': [
            '#NULO!',
            '#DIV/0!',
            '#VALOR!',
            '#NOME?',
            '#NÚM!',
            '#N/D',
            '#OBTENDO_DADOS',
            '#DESPEJAR!'
        ]
    }
};
const isIntersecop = new lr.ExternalTokenizer((input, stack) => {
    let { next } = input, before;
    if (!isSpace(next) &&
        ((before = input.peek(-1)) !== closeParen ||
            !isDigit(before) ||
            !isAsciiLeter(before) ||
            before !== backSlash ||
            before !== underscore ||
            before !== dot ||
            before !== questionMark ||
            before !== euroSign))
        return;
    for (;;) {
        next = input.advance();
        if (!isSpace(next))
            break;
    }
    if (next === openParen ||
        isAsciiLeter(next) ||
        before === backSlash ||
        before === underscore)
        return input.acceptToken(intersecop);
}, { contextual: true });
const decimalSeparator = new lr.ExternalTokenizer((input, stack) => {
    const { next } = input, charCodeDecimalSeparator = {
        '.': dot,
        ',': comma
    }[currDecimalSeparator];
    if (next === charCodeDecimalSeparator)
        return input.acceptToken(decimalSeparator$1, 1);
});
const Separator = new lr.ExternalTokenizer((input, stack) => {
    const { next } = input, 
    // Depending on the decimal separator, the separator changes
    currSeparator = {
        // Key is the decimal separator and Value is the separator
        '.': comma,
        ',': semiColon
    }[currDecimalSeparator];
    if (next === currSeparator)
        return input.acceptToken(Separator$1, 1);
});
const isArrayRowSeparator = (value, stack) => {
    // Depending on the decimal separator, the row separator of the array changes
    const currArrayRowSeparator = {
        // Key is the decimal separator and Value is the array row separator
        '.': ',',
        ',': '\\'
    }[currDecimalSeparator];
    return value === currArrayRowSeparator ? arrayRowSeparator : -1;
};
const desambiguateNameToken = (value, stack) => {
    if (i18n.BoolToken[currIdiom].indexOf(value.toUpperCase()) !== -1) {
        return BoolToken;
    }
    return -1;
};
const isErrors = (value, stack) => {
    if (i18n.RefErrorToken[currIdiom].indexOf(value.toUpperCase()) !==
        -1) {
        return RefErrorToken;
    }
    else if (i18n.ErrorToken[currIdiom].indexOf(value.toUpperCase()) !== -1) {
        return ErrorToken;
    }
    return -1;
};
const setLezerIdiom = (newIdiom) => (currIdiom = newIdiom);
const setDecimalSeparator = (newDecimalSeparator) => (currDecimalSeparator = newDecimalSeparator);

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = lr.LRParser.deserialize({
  version: 14,
  states: ",YO!aQ[OOOOQR'#Cc'#CcO!kQZO'#CcO$[QZO'#DZO%iQ[O'#ChO&tQZO'#D[OOQO'#D_'#D_O'UQ`O'#D_OOQR'#Cb'#CbO'^QWO'#CbOOQU'#C}'#C}O'oQ^O'#CrO)SQWO'#CrOOQQ'#Cq'#CqO*SQWO'#DXO*ZQ^O'#CtO%iQ[O'#CtOOQQ'#Ct'#CtO+VQ[O'#CxOOQQ'#DZ'#DZOOQO'#DX'#DXQOQWOOO%iQ[O'#DXO+^QWO,59SO+^QWO,59SO+{QZO,59vO,VQWO,59SO,[QWO,59uO*hQ[O'#CxOOQR,59S,59SOOQO,59y,59yOOQR,58|,58|OOQU-E6{-E6{O,cQYO,59^OOQQ,59^,59^O%iQ[O,5:PO%iQ[O,5:PO%iQ[O,5:PO%iQ[O,5:PO%iQ[O,5:POOQQ,59`,59`O-sQYO'#CwO-}QYO'#CvO.VQWO,59`O.[QYO,59`OOQS'#Dp'#DpOOQO'#C{'#C{O.lQ[O'#C{O.tQWO'#CzO/PQWO'#CyO/XQWO,59dO%iQ[O,5:_O/^QWO,59sOOQR1G.n1G.nO+^QWO'#ChO/eQZO1G.nO+^QWO'#C|O0uQYO,59UOOQR1G/b1G/bOOQQ1G/a1G/aO0}QYO1G.xO3cQYO1G/kO3jQYO1G/kO4rQYO1G/kO4|QYO1G/kO5oQYO1G/kO*ZQ^O'#DOO6cQYO,59bOOQQ1G.z1G.zOOQO,59g,59gO*hQ[O'#DPO6kQWO,59fO6vQWO,59eO*hQ[O'#DQOOQQ1G/O1G/OO7OQWO1G/yO7VQXO'#ChO7_QZO,59hOOQQ-E6z-E6zOOQQ,59j,59jOOQQ-E6|-E6|OOQO,59k,59kOOQO-E6}-E6}OOQO-E7O-E7OOOQO,59l,59lOOQO7+%e7+%e",
  stateData: "8T~OzOS~OQQOR]OS]OWPOXPOYPOZPO]SO`UOaVOcUOg]Oi_Ow[O!SYO!T`O!U`O!V`O~O|fO!cbO~PVOQ!RXW!RXX!RXY!RXZ!RXuVXvVX|VX!PVX!QVX!TVX!UVX!WVX!YVX!ZVX![VX!]VX!^VX!_VX!`VX!aVX!bVXPVX_VX!fVX~OvhO!PgOu}X|}X!T}X!U}X!W}X!Y}X!Z}X![}X!]}X!^}X!_}X!`}X!a}X!b}X_}XP}X!f}X~O!clO~PVO!QmOv!OX|!OX!P!OX!T!OX!U!OX!W!OX!Y!OX!Z!OX![!OX!]!OX!^!OX!_!OX!`!OX!a!OX!b!OX~Ou!OXP!OX_!OX!f!OX~P%pObnOdnO~OQPOWPOXPOYPOZPO~OwqO!SYOufX|fX!TfX!UfX!WfX!YfX!ZfX![fX!]fX!^fX!_fX!`fX!afX!bfX_fXPfXxfX!efX!ffX~O!SrO~O|wO!TuO!UuO!WxO!YsO!ZtO![tO!]vO!^wO!_wO!`wO!awO!bwO~Ou{X~P)XO!clOPkP_kP~PVOQ!OOR]OS]Og]Ow[O!SYO!T}O!U}O!V}O~O|!TO~P*hOQQOWPOXPOYPOZPO]!WO`UOaVOcUO~OP!YO_![O~P%pO_!VO~O_!]O~P)XO!SYOufa|fa!Tfa!Ufa!Wfa!Yfa!Zfa![fa!]fa!^fa!_fa!`fa!afa!bfa_faPfaxfa!efa!ffa~OPkX_kX~P)XOP!dO_jX~O_!fO~Ouha_haPha!fha~P)XOw[O!SYO~Ox!hO!enX!fnX~O!e!kO!fmX~O!f!lO~Ou{a~P)XO!PgOu[iv[i|[i!Q[i!T[i!U[i!W[i!Y[i!Z[i![[i!][i!^[i!_[i!`[i!a[i!b[iP[i_[i!f[i~OP!YO_^a~O!SYOufi|fi!Tfi!Ufi!Wfi!Yfi!Zfi![fi!]fi!^fi!_fi!`fi!afi!bfi_fiPfixfi!efi!ffi~O!WxOu!Xi|!Xi!T!Xi!U!Xi!Z!Xi![!Xi!]!Xi!^!Xi!_!Xi!`!Xi!a!Xi!b!Xi_!XiP!Xi!f!Xi~O!Y!Xi~P2_O!YsO~P2_O!WxO!YsO!ZtO![tOu!Xi|!Xi!]!Xi!^!Xi!_!Xi!`!Xi!a!Xi!b!Xi_!XiP!Xi!f!Xi~O!T!Xi!U!Xi~P3qO!TuO!UuO~P3qO!TuO!UuO!WxO!YsO!ZtO![tO!]vO~Ou!Xi|!Xi!^!Xi!_!Xi!`!Xi!a!Xi!b!Xi_!XiP!Xi!f!Xi~P5WOP!dO_ja~Ox!hO!ena!fna~O!e!kO!fma~O!f!wO~P)XOvhO!PgO~O!QmOPpa_pav!OX!P!OX~OZdbcg`!SiYW!hX!i!Q!V!TzY~",
  goto: ")R!hPPPPPP!i#PPPPP#fP#xPPPPPP#|$bP$wP%V%Y$w%`%d%k%s%y&e&k&qPPPPPP&wP&z'nPP(WPPPPP(jPPPPPPPPPP(xPP)OjTO_`fghstuvw!T!dSiS!WR!o!YpWOS_`fghstuvw!T!W!Y!dRoXqWOS_`fghstuvw!T!W!Y!dTjS!WhcOS_`fstuvw!T!dX!Obl!h!kp]OS_`bflstuvw!T!d!h!kR!g!PicOS_`fstuvw!T!dR{_Qz_R!q!dT!SblS!RblR!v!kU!Qbl!kR!s!hQ!ZiR!p!ZrZOS_`bflstuvw!P!T!d!h!kSpZ!^R!^qQ!ezR!r!eQ!i!QR!t!iQ!j!RR!u!jReOQ^OQkSSy_!dQ|`Q!UfQ!_sQ!`tQ!auQ!bvQ!cwR!m!ThROS_`fstuvw!T!dQ!VgQ!XhT!n!W!YqXOS_`fghstuvw!T!W!Y!diaOS_`fstuvw!T!dX!Pbl!h!kRdO",
  nodeNames: "⚠ Separator RefErrorToken ErrorToken BoolToken Program Reference ReferenceItem CellToken NameToken VerticalRangeToken HorizontalRangeToken ReferenceFunctionCall OpenParen Union CloseParen SheetToken QuoteS SheetQuotedToken MultipleSheetsToken MultipleSheetsQuotedToken Constant Number TextToken FunctionCall Function Arguments Argument ConstantArray ArrayColumns ArrayRows ArrayConstant",
  maxTerm: 71,
  nodeProps: [
    ["closedBy", -2,13,25,"CloseParen"],
    ["openedBy", 15,"OpenParen | Function"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 5,
  tokenData: "#*i~RyOX#rXY/XYZ/XZ]#r]^/X^p#rpq1Xqr#rrs2fstHetuK_uv!6[vw!7Swx!7zxy!8Syz!8zz{!9r{|!9w|}!;h}!O!<`!O!P#r!P!Q!=W!Q![!=]![!]!>|!]!^!?R!^!_!?y!_!`!Bg!`!a!C_!b!c!ET!c!}!Ft#O#P#'b#Q#R#(R#R#S!Iu#S#T#r#T#o!Ft#o#p#(y#p#q#r#q#r#)q#r;'S#r;'S;=`/R<%lO#r~#uhOp#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#rQ%dZOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aQ&YQqr&`wx%aQ&eObQQ&hYOw'Wwx(_xz'W{!P'W!Q!['W!]!a'W!b!}'W#Q;'S'W;'S;=`(X<%lO'WQ'ZYOw'Wwx'yxz'W{!P'W!Q!['W!]!a'W!b!}'W#Q;'S'W;'S;=`(X<%lO'WQ'|Qqr(Swx'WQ(XOdQQ([P;=`<%l'WQ(bPwx'WQ(hP;=`<%l%a~(ph`~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~*_fOp+spq'Wqs+sst'Wtu+suw'Wwx(_xz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~+vgOp+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~-dgc~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~/OP;=`<%l+s~/UP;=`<%l#r~/^mz~OX#rXY/XYZ/XZ]#r]^/X^p#rpq1Xqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~1^bz~OX%aXY1XYZ1XZ]%a]^1X^p%apq1Xqw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~2ilOp2fpq4aqr=[rs?Xst4atu2fuw4awx6gxz4az{7S{|2f|!O4a!O!P2f!P!Q7S!Q![2f![!]@x!]!a4a!a!b7S!b!}2f!}#Q7S#Q#R4a#R#o2f#o#p4a#p#q2f#q#r4a#r;'S2f;'S;=`H_<%lO2f~4daOr4ars5isw4awx6gxz4az{7S{!P4a!P!Q7S!Q![4a![!]8Y!]!a4a!a!b7S!b!}4a!}#Q7S#Q;'S4a;'S;=`=U<%lO4a~5n]g~Or%ars4asw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~6jWOq7Sqr7trs7fsw7Swx4ax;'S7S;'S;=`7n<%lO7S~7VTOr7Srs7fs;'S7S;'S;=`7n<%lO7S~7kPg~rs7S~7qP;=`<%l7S~7yTbQOr7Srs7fs;'S7S;'S;=`7n<%lO7S~8]aOr9brs:jsw9bwx<lxz9bz{7S{!P9b!P!Q7S!Q![9b![!]7S!]!a9b!a!b7S!b!}9b!}#Q7S#Q;'S9b;'S;=`<f<%lO9b~9eaOr9brs:jsw9bwx;exz9bz{7S{!P9b!P!Q7S!Q![9b![!]7S!]!a9b!a!b7S!b!}9b!}#Q7S#Q;'S9b;'S;=`<f<%lO9b~:o[g~Or'Wrs9bsw'Wwx'yxz'W{!P'W!Q!['W!]!a'W!b!}'W#Q;'S'W;'S;=`(X<%lO'W~;hWOq7Sqr<Qrs7fsw7Swx9bx;'S7S;'S;=`7n<%lO7S~<VTdQOr7Srs7fs;'S7S;'S;=`7n<%lO7S~<iP;=`<%l9b~<oVOr7Srs7fsw7Swx9bx;'S7S;'S;=`7n<%lO7S~=XP;=`<%l4a~=al`~Op2fpq4aqr=[rs?Xst4atu2fuw4awx6gxz4az{7S{|2f|!O4a!O!P2f!P!Q7S!Q![2f![!]@x!]!a4a!a!b7S!b!}2f!}#Q7S#Q#R4a#R#o2f#o#p4a#p#q2f#q#r4a#r;'S2f;'S;=`H_<%lO2f~?^hg~Op#rpq%aqr(krs2fst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~@{lOpBspq9bqrBsrsFkst9btuBsuw9bwx<lxz9bz{7S{|Bs|!O9b!O!PBs!P!Q7S!Q![Bs![!]7S!]!a9b!a!b7S!b!}Bs!}#Q7S#Q#R9b#R#oBs#o#p9b#p#qBs#q#r9b#r;'SBs;'S;=`HX<%lOBs~BvlOpBspq9bqrDnrsFkst9btuBsuw9bwx;exz9bz{7S{|Bs|!O9b!O!PBs!P!Q7S!Q![Bs![!]7S!]!a9b!a!b7S!b!}Bs!}#Q7S#Q#R9b#R#oBs#o#p9b#p#qBs#q#r9b#r;'SBs;'S;=`HX<%lOBs~Dslc~OpBspq9bqrDnrsFkst9btuBsuw9bwx;exz9bz{7S{|Bs|!O9b!O!PBs!P!Q7S!Q![Bs![!]7S!]!a9b!a!b7S!b!}Bs!}#Q7S#Q#R9b#R#oBs#o#p9b#p#qBs#q#r9b#r;'SBs;'S;=`HX<%lOBs~Fpgg~Op+spq'Wqr-_rsBsst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~H[P;=`<%lBs~HbP;=`<%l2f~Hj[!Q~Ow%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!c%a!c!}I`#Q;'S%a;'S;=`(e<%lO%a~Ied!i~Oq%aqrI`rw%awx&Vxz%a{!P%a!P!QJs!Q![I`![!]&e!]!a%a!a!bJs!b!c%a!c!}I`#Q#R%a#R#SI`#S%r%a%r%sI`%s;'S%a;'S;=`(e<%lO%a~JxV!i~qrJs!P!QJs!Q![Js!a!bJs!c!}Js#R#SJs%r%sJs~KbjOp#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![MS![!]*[!]!a%a!b!c#r!c!}!%b#Q#R%a#R#T#r#T#o!%b#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~MVhOp#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![MS![!]Nq!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~NtfOp+spq'Wqs+sst'Wtu!!Yuw'Wwx(_xz'W{|+s|!O'W!O!P+s!Q![!#t!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!!]gOp+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![!#t!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!#ygZ~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![!#t!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!%ejOp#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]!*e!]!a%a!b!c#r!c!}!2x#Q#R%a#R#T#r#T#o!2x#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!'YhOp#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!(yhW~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!*hhOp+spq'Wqs+sst'Wtu!,Suw'Wwx(_xz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!c+s!c!}!-t#Q#R'W#R#T+s#T#o!-t#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!,ViOp+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!c+s!c!}!-t#Q#R'W#R#T+s#T#o!-t#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!-yiY~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!c+s!c!}!/h#Q#R'W#R#T+s#T#o!/h#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!/miY~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!c+s!c!}!1[#Q#R'W#R#T+s#T#o!1[#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!1agY~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!2{jOp#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]!*e!]!a%a!b!c#r!c!}!4m#Q#R%a#R#T#r#T#o!4m#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!4phOp#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]!*e!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#rR!6aZ!WPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!7XZ!]POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!8PPaPwx%aR!8XZ]POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!9PZ_POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~!9wO!Z~~!9|h!T~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!;mZ!h~Ow%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!<eZ!UPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~!=]O![~~!=bh!S~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!=]![!]Nq!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!?RO!P~R!?WZ!ePOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!@O]!_POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!_%a!_!`!@w!`!a!Ao!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!@|Z!bPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!AtZ!`POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!BlZ|POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!Cd]!^POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!_%a!_!`!D]!`!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!DbZ!aPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~!EYh!V~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!FypX~Op#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Ns![!]!*e!]!a%a!a!b!LO!b!c#r!c!}##O#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o##O#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~!ISZi~Ow%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~!IzpX~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Iu![!]*[!]!a%a!a!b!LO!b!c#r!c!}!Iu#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o!Iu#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~!LTWX~!O!P!LO!Q![!LO!a!b!LO!c!}!LO#O#P!LO#R#S!LO#T#o!LO$Lv$Lw!LO~!LroX~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P!Lm!Q![!Lm![!]*[!]!a%a!a!b!LO!b!c#r!c!}!Lm#O#P!LO#Q#R%a#R#S!Lm#S#T#r#T#o!Lm#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~!NzpW~X~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Ns![!]*[!]!a%a!a!b!LO!b!c#r!c!}!Iu#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o!Iu#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~##TpX~Op#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Ns![!]!*e!]!a%a!a!b!LO!b!c#r!c!}#%X#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o#%X#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~#%^pX~Op#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Ns![!]!*e!]!a%a!a!b!LO!b!c#r!c!}!Iu#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o!Iu#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~#'iW!h~X~!O!P!LO!Q![!LO!a!b!LO!c!}!LO#O#P!LO#R#S!LO#T#o!LO$Lv$Lw!LOR#(WZ!YPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR#)OZ!cPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR#)vZ!fPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a",
  tokenizers: [isIntersecop, Separator, decimalSeparator, 0, 1],
  topRules: {"Program":[0,5]},
  specialized: [{term: 70, get: (value, stack) => (isArrayRowSeparator(value) << 1), external: isArrayRowSeparator},{term: 71, get: (value, stack) => (isErrors(value) << 1), external: isErrors},{term: 9, get: (value, stack) => (desambiguateNameToken(value) << 1), external: desambiguateNameToken}],
  tokenPrec: 1044
});

const spreadsheetLanguage = language.LRLanguage.define({
    parser: parser.configure({
        props: [
            language.indentNodeProp.add({
                Application: language.delimitedIndent({ closing: ')', align: false })
            }),
            language.foldNodeProp.add({
                Application: language.foldInside
            }),
            highlight.styleTags({
                // References
                'Reference/...': highlight.tags.color,
                RefErrorToken: highlight.tags.invalid,
                // Constants
                BoolToken: highlight.tags.bool,
                ErrorToken: highlight.tags.invalid,
                NumberToken: highlight.tags.number,
                TextToken: highlight.tags.string,
                // Functions
                Function: highlight.tags.function(highlight.tags.name),
                // Symbols
                OpenParen: highlight.tags.name,
                CloseParen: highlight.tags.name,
                '[ ]': highlight.tags.squareBracket,
                '{ }': highlight.tags.brace
            })
        ]
    })
});
const changeIdiom = setLezerIdiom, changeDecimalSeparator = setDecimalSeparator;
function spreadsheet({ idiom = 'en-US', decimalSeparator = '.' } = {}) {
    setLezerIdiom(idiom);
    setDecimalSeparator(decimalSeparator);
    return new language.LanguageSupport(spreadsheetLanguage);
}

exports.changeDecimalSeparator = changeDecimalSeparator;
exports.changeIdiom = changeIdiom;
exports.spreadsheet = spreadsheet;
exports.spreadsheetLanguage = spreadsheetLanguage;
