import { ExternalTokenizer, LRParser } from '@lezer/lr';
import { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const intersecop = 37,
  separator$1 = 38,
  decimalSeparator$1 = 39,
  arrayRowSeparator = 40,
  RefErrorToken = 1,
  ErrorToken = 2,
  BoolToken = 3;

/* Hand-written tokenizers for excel formula tokens that can't be
  expressed by lezer's built-in tokenizer (or are harder to express). */
const backSlash = 92, comma = 44, closeParen = 41, dot = 46, euroSign = 8364, openParen = 40, questionMark = 63, semiColon = 59, underscore = 95, isAsciiLeter = (charCode) => {
    return ((charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122));
}, isDigit = (charCode) => charCode >= 48 && charCode <= 57, isSpace = (charCode) => {
    return ([
        9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196,
        8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288
    ].indexOf(charCode) !== -1);
};
let currDecimalSeparator = ".";
let currIdiom = 'en-US';
// Always uppercase
// Source: https://en.excel-translator.de/
const i18n = {
    BoolToken: {
        'en-US': ['TRUE', 'FALSE'],
        'pt-BR': ['VERDADEIRO', 'FALSO']
    },
    RefErrorToken: {
        'en-US': '#REF!',
        'pt-BR': '#REF!'
    },
    ErrorToken: {
        'en-US': [
            '#NULL!',
            '#DIV/0!',
            '#VALUE!',
            '#NAME?',
            '#NUM!',
            '#N/A',
            '#GETTING_DATA',
            '#SPILL!'
        ],
        'pt-BR': [
            '#NULO!',
            '#DIV/0!',
            '#VALOR!',
            '#NOME?',
            '#NÚM!',
            '#N/D',
            '#OBTENDO_DADOS',
            '#DESPEJAR!'
        ]
    }
};
const isIntersecop = new ExternalTokenizer((input, stack) => {
    let { next } = input, before;
    if (!isSpace(next) &&
        ((before = input.peek(-1)) !== closeParen ||
            !isDigit(before) ||
            !isAsciiLeter(before) ||
            before !== backSlash ||
            before !== underscore ||
            before !== dot ||
            before !== questionMark ||
            before !== euroSign))
        return;
    for (;;) {
        next = input.advance();
        if (!isSpace(next))
            break;
    }
    if (next === openParen ||
        isAsciiLeter(next) ||
        before === backSlash ||
        before === underscore)
        return input.acceptToken(intersecop);
}, { contextual: true });
const decimalSeparator = new ExternalTokenizer((input, stack) => {
    const { next } = input, charCodeDecimalSeparator = {
        ".": dot,
        ",": comma
    }[currDecimalSeparator];
    if (next === charCodeDecimalSeparator)
        return input.acceptToken(decimalSeparator$1, 1);
});
const separator = new ExternalTokenizer((input, stack) => {
    const { next } = input, 
    // Depending on the decimal separator, the separator changes
    currSeparator = {
        ".": comma,
        ",": semiColon
    }[currDecimalSeparator];
    if (next === currSeparator)
        return input.acceptToken(separator$1, 1);
});
const isArrayRowSeparator = (value, stack) => {
    // Depending on the decimal separator, the row separator of the array changes
    const currArrayRowSeparator = {
        ".": ",",
        ",": "\\"
    }[currDecimalSeparator];
    return value === currArrayRowSeparator
        ? arrayRowSeparator
        : -1;
};
const desambiguateNameToken = (value, stack) => {
    if (i18n.BoolToken[currIdiom].indexOf(value.toUpperCase()) !== -1) {
        return BoolToken;
    }
    return -1;
};
const isRefErrorToken = (value, stack) => {
    if (i18n.RefErrorToken[currIdiom].indexOf(value.toUpperCase()) !==
        -1) {
        return RefErrorToken;
    }
    else if (i18n.ErrorToken[currIdiom].indexOf(value.toUpperCase()) !== -1) {
        return ErrorToken;
    }
    return -1;
};
const setLezerIdiom = (newIdiom) => (currIdiom = newIdiom);
const setDecimalSeparator = (newDecimalSeparator) => (currDecimalSeparator = newDecimalSeparator);

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: ",YO!aQ[OOOOQR'#Cb'#CbO!kQZO'#CbO$[QZO'#DZO%iQ[O'#CgO&tQZO'#D[OOQO'#D_'#D_O'UQ`O'#D_OOQR'#Ca'#CaO'^QWO'#CaOOQU'#C|'#C|O'oQ^O'#CqO)SQWO'#CqOOQQ'#Cp'#CpO*SQWO'#DXO*ZQ^O'#CsO%iQ[O'#CsOOQQ'#Cs'#CsO+VQ[O'#CwOOQQ'#DZ'#DZOOQO'#DX'#DXQOQWOOO%iQ[O'#DXO+^QWO,59RO+^QWO,59RO+{QZO,59vO,VQWO,59RO,[QWO,59uO*hQ[O'#CwOOQR,59R,59ROOQO,59y,59yOOQR,58{,58{OOQU-E6z-E6zO,cQYO,59]OOQQ,59],59]O%iQ[O,5:PO%iQ[O,5:PO%iQ[O,5:PO%iQ[O,5:PO%iQ[O,5:POOQQ,59_,59_O-sQYO'#CvO-}QYO'#CuO.VQWO,59_O.[QYO,59_OOQS'#Dp'#DpOOQO'#Cz'#CzO.lQ[O'#CzO.tQWO'#CyO/PQWO'#CxO/XQWO,59cO%iQ[O,5:_O/^QWO,59sOOQR1G.m1G.mO+^QWO'#CgO/eQZO1G.mO+^QWO'#C{O0uQYO,59TOOQR1G/b1G/bOOQQ1G/a1G/aO0}QYO1G.wO3cQYO1G/kO3jQYO1G/kO4rQYO1G/kO4|QYO1G/kO5oQYO1G/kO*ZQ^O'#C}O6cQYO,59aOOQQ1G.y1G.yOOQO,59f,59fO*hQ[O'#DOO6kQWO,59eO6vQWO,59dO*hQ[O'#DPOOQQ1G.}1G.}O7OQWO1G/yO7VQXO'#CgO7_QZO,59gOOQQ-E6y-E6yOOQQ,59i,59iOOQQ-E6{-E6{OOQO,59j,59jOOQO-E6|-E6|OOQO-E6}-E6}OOQO,59k,59kOOQO7+%e7+%e",
  stateData: "8T~OzOS~OPQOQ]OR]OVPOWPOXPOYPO[SO_UO`VObUOf]Oh_Ow[O!SYO!T`O!U`O!V`O~O|fO!cbO~PVOP!RXV!RXW!RXX!RXY!RXtUXuUX|UX!PUX!QUX!TUX!UUX!WUX!YUX!ZUX![UX!]UX!^UX!_UX!`UX!aUX!bUX^UXvUX!fUX~OuhO!PgOt}X|}X!T}X!U}X!W}X!Y}X!Z}X![}X!]}X!^}X!_}X!`}X!a}X!b}X^}Xv}X!f}X~O!clO~PVO!QmOu!OX|!OX!P!OX!T!OX!U!OX!W!OX!Y!OX!Z!OX![!OX!]!OX!^!OX!_!OX!`!OX!a!OX!b!OX~Ot!OX^!OXv!OX!f!OX~P%pOanOcnO~OPPOVPOWPOXPOYPO~OwqO!SYOteX|eX!TeX!UeX!WeX!YeX!ZeX![eX!]eX!^eX!_eX!`eX!aeX!beX^eXveXxeX!eeX!feX~O!SrO~O|wO!TuO!UuO!WxO!YsO!ZtO![tO!]vO!^wO!_wO!`wO!awO!bwO~Ot{X~P)XO!clO^jPvjP~PVOP!OOQ]OR]Of]Ow[O!SYO!T}O!U}O!V}O~O|!TO~P*hOPQOVPOWPOXPOYPO[!WO_UO`VObUO~O^![Ov!YO~P%pO^!VO~O^!]O~P)XO!SYOtea|ea!Tea!Uea!Wea!Yea!Zea![ea!]ea!^ea!_ea!`ea!aea!bea^eaveaxea!eea!fea~O^jXvjX~P)XOv!dO^iX~O^!fO~Otga^gavga!fga~P)XOw[O!SYO~Ox!hO!emX!fmX~O!e!kO!flX~O!f!lO~Ot{a~P)XO!PgOtZiuZi|Zi!QZi!TZi!UZi!WZi!YZi!ZZi![Zi!]Zi!^Zi!_Zi!`Zi!aZi!bZi^ZivZi!fZi~Ov!YO^]a~O!SYOtei|ei!Tei!Uei!Wei!Yei!Zei![ei!]ei!^ei!_ei!`ei!aei!bei^eiveixei!eei!fei~O!WxOt!Xi|!Xi!T!Xi!U!Xi!Z!Xi![!Xi!]!Xi!^!Xi!_!Xi!`!Xi!a!Xi!b!Xi^!Xiv!Xi!f!Xi~O!Y!Xi~P2_O!YsO~P2_O!WxO!YsO!ZtO![tOt!Xi|!Xi!]!Xi!^!Xi!_!Xi!`!Xi!a!Xi!b!Xi^!Xiv!Xi!f!Xi~O!T!Xi!U!Xi~P3qO!TuO!UuO~P3qO!TuO!UuO!WxO!YsO!ZtO![tO!]vO~Ot!Xi|!Xi!^!Xi!_!Xi!`!Xi!a!Xi!b!Xi^!Xiv!Xi!f!Xi~P5WOv!dO^ia~Ox!hO!ema!fma~O!e!kO!fla~O!f!wO~P)XOuhO!PgO~O!QmO^oau!OXvoa!P!OX~OYcabf_!ShXV!hW!i!Q!V!TzX~",
  goto: ")R!hPPPPP!i#PPPPP#fP#xPPPPPP#|$bP$wP%V%Y$w%`%d%k%s%y&e&k&qPPPPPPP&wP&z'nPP(WPPPPP(jPPPPPPPPPP(xPP)OjTO_`fghstuvw!T!dSiS!WR!o!YpWOS_`fghstuvw!T!W!Y!dRoXqWOS_`fghstuvw!T!W!Y!dTjS!WhcOS_`fstuvw!T!dX!Obl!h!kp]OS_`bflstuvw!T!d!h!kR!g!PicOS_`fstuvw!T!dR{_Qz_R!q!dT!SblS!RblR!v!kU!Qbl!kR!s!hQ!ZiR!p!ZrZOS_`bflstuvw!P!T!d!h!kSpZ!^R!^qQ!ezR!r!eQ!i!QR!t!iQ!j!RR!u!jReOQ^OQkSSy_!dQ|`Q!UfQ!_sQ!`tQ!auQ!bvQ!cwR!m!ThROS_`fstuvw!T!dQ!VgQ!XhT!n!W!YqXOS_`fghstuvw!T!W!Y!diaOS_`fstuvw!T!dX!Pbl!h!kRdO",
  nodeNames: "⚠ RefErrorToken ErrorToken BoolToken Program Reference ReferenceItem CellToken NameToken VerticalRangeToken HorizontalRangeToken ReferenceFunctionCall OpenParen Union CloseParen SheetToken QuoteS SheetQuotedToken MultipleSheetsToken MultipleSheetsQuotedToken Constant Number TextToken FunctionCall Function Arguments Argument ConstantArray ArrayColumns ArrayRows ArrayConstant",
  maxTerm: 71,
  nodeProps: [
    ["closedBy", -2,12,24,"CloseParen"],
    ["openedBy", 14,"OpenParen | Function"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 5,
  tokenData: "#*i~RyOX#rXY/XYZ/XZ]#r]^/X^p#rpq1Xqr#rrs2fstHetuK_uv!6[vw!7Swx!7zxy!8Syz!8zz{!9r{|!9w|}!;h}!O!<`!O!P#r!P!Q!=W!Q![!=]![!]!>|!]!^!?R!^!_!?y!_!`!Bg!`!a!C_!b!c!ET!c!}!Ft#O#P#'b#Q#R#(R#R#S!Iu#S#T#r#T#o!Ft#o#p#(y#p#q#r#q#r#)q#r;'S#r;'S;=`/R<%lO#r~#uhOp#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#rQ%dZOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aQ&YQqr&`wx%aQ&eOaQQ&hYOw'Wwx(_xz'W{!P'W!Q!['W!]!a'W!b!}'W#Q;'S'W;'S;=`(X<%lO'WQ'ZYOw'Wwx'yxz'W{!P'W!Q!['W!]!a'W!b!}'W#Q;'S'W;'S;=`(X<%lO'WQ'|Qqr(Swx'WQ(XOcQQ([P;=`<%l'WQ(bPwx'WQ(hP;=`<%l%a~(ph_~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~*_fOp+spq'Wqs+sst'Wtu+suw'Wwx(_xz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~+vgOp+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~-dgb~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~/OP;=`<%l+s~/UP;=`<%l#r~/^mz~OX#rXY/XYZ/XZ]#r]^/X^p#rpq1Xqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~1^bz~OX%aXY1XYZ1XZ]%a]^1X^p%apq1Xqw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~2ilOp2fpq4aqr=[rs?Xst4atu2fuw4awx6gxz4az{7S{|2f|!O4a!O!P2f!P!Q7S!Q![2f![!]@x!]!a4a!a!b7S!b!}2f!}#Q7S#Q#R4a#R#o2f#o#p4a#p#q2f#q#r4a#r;'S2f;'S;=`H_<%lO2f~4daOr4ars5isw4awx6gxz4az{7S{!P4a!P!Q7S!Q![4a![!]8Y!]!a4a!a!b7S!b!}4a!}#Q7S#Q;'S4a;'S;=`=U<%lO4a~5n]f~Or%ars4asw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~6jWOq7Sqr7trs7fsw7Swx4ax;'S7S;'S;=`7n<%lO7S~7VTOr7Srs7fs;'S7S;'S;=`7n<%lO7S~7kPf~rs7S~7qP;=`<%l7S~7yTaQOr7Srs7fs;'S7S;'S;=`7n<%lO7S~8]aOr9brs:jsw9bwx<lxz9bz{7S{!P9b!P!Q7S!Q![9b![!]7S!]!a9b!a!b7S!b!}9b!}#Q7S#Q;'S9b;'S;=`<f<%lO9b~9eaOr9brs:jsw9bwx;exz9bz{7S{!P9b!P!Q7S!Q![9b![!]7S!]!a9b!a!b7S!b!}9b!}#Q7S#Q;'S9b;'S;=`<f<%lO9b~:o[f~Or'Wrs9bsw'Wwx'yxz'W{!P'W!Q!['W!]!a'W!b!}'W#Q;'S'W;'S;=`(X<%lO'W~;hWOq7Sqr<Qrs7fsw7Swx9bx;'S7S;'S;=`7n<%lO7S~<VTcQOr7Srs7fs;'S7S;'S;=`7n<%lO7S~<iP;=`<%l9b~<oVOr7Srs7fsw7Swx9bx;'S7S;'S;=`7n<%lO7S~=XP;=`<%l4a~=al_~Op2fpq4aqr=[rs?Xst4atu2fuw4awx6gxz4az{7S{|2f|!O4a!O!P2f!P!Q7S!Q![2f![!]@x!]!a4a!a!b7S!b!}2f!}#Q7S#Q#R4a#R#o2f#o#p4a#p#q2f#q#r4a#r;'S2f;'S;=`H_<%lO2f~?^hf~Op#rpq%aqr(krs2fst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~@{lOpBspq9bqrBsrsFkst9btuBsuw9bwx<lxz9bz{7S{|Bs|!O9b!O!PBs!P!Q7S!Q![Bs![!]7S!]!a9b!a!b7S!b!}Bs!}#Q7S#Q#R9b#R#oBs#o#p9b#p#qBs#q#r9b#r;'SBs;'S;=`HX<%lOBs~BvlOpBspq9bqrDnrsFkst9btuBsuw9bwx;exz9bz{7S{|Bs|!O9b!O!PBs!P!Q7S!Q![Bs![!]7S!]!a9b!a!b7S!b!}Bs!}#Q7S#Q#R9b#R#oBs#o#p9b#p#qBs#q#r9b#r;'SBs;'S;=`HX<%lOBs~Dslb~OpBspq9bqrDnrsFkst9btuBsuw9bwx;exz9bz{7S{|Bs|!O9b!O!PBs!P!Q7S!Q![Bs![!]7S!]!a9b!a!b7S!b!}Bs!}#Q7S#Q#R9b#R#oBs#o#p9b#p#qBs#q#r9b#r;'SBs;'S;=`HX<%lOBs~Fpgf~Op+spq'Wqr-_rsBsst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~H[P;=`<%lBs~HbP;=`<%l2f~Hj[!Q~Ow%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!c%a!c!}I`#Q;'S%a;'S;=`(e<%lO%a~Ied!i~Oq%aqrI`rw%awx&Vxz%a{!P%a!P!QJs!Q![I`![!]&e!]!a%a!a!bJs!b!c%a!c!}I`#Q#R%a#R#SI`#S%r%a%r%sI`%s;'S%a;'S;=`(e<%lO%a~JxV!i~qrJs!P!QJs!Q![Js!a!bJs!c!}Js#R#SJs%r%sJs~KbjOp#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![MS![!]*[!]!a%a!b!c#r!c!}!%b#Q#R%a#R#T#r#T#o!%b#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~MVhOp#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![MS![!]Nq!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~NtfOp+spq'Wqs+sst'Wtu!!Yuw'Wwx(_xz'W{|+s|!O'W!O!P+s!Q![!#t!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!!]gOp+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![!#t!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!#ygY~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![!#t!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!%ejOp#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]!*e!]!a%a!b!c#r!c!}!2x#Q#R%a#R#T#r#T#o!2x#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!'YhOp#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!(yhV~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!*hhOp+spq'Wqs+sst'Wtu!,Suw'Wwx(_xz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!c+s!c!}!-t#Q#R'W#R#T+s#T#o!-t#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!,ViOp+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!c+s!c!}!-t#Q#R'W#R#T+s#T#o!-t#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!-yiX~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!c+s!c!}!/h#Q#R'W#R#T+s#T#o!/h#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!/miX~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!c+s!c!}!1[#Q#R'W#R#T+s#T#o!1[#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!1agX~Op+spq'Wqr-_rs+sst'Wtu+suw'Wwx'yxz'W{|+s|!O'W!O!P+s!Q![+s!]!a'W!b!}+s#Q#R'W#R#o+s#o#p'W#p#q+s#q#r'W#r;'S+s;'S;=`.{<%lO+s~!2{jOp#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]!*e!]!a%a!b!c#r!c!}!4m#Q#R%a#R#T#r#T#o!4m#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!4phOp#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!(t![!]!*e!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#rR!6aZ!WPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!7XZ!]POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!8PP`Pwx%aR!8XZ[POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!9PZ^POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~!9wO!Z~~!9|h!T~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!;mZ!h~Ow%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!<eZ!UPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~!=]O![~~!=bh!S~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![!=]![!]Nq!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!?RO!P~R!?WZ!ePOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!@O]!_POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!_%a!_!`!@w!`!a!Ao!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!@|Z!bPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!AtZ!`POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!BlZ|POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!Cd]!^POw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!_%a!_!`!D]!`!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR!DbZ!aPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~!EYh!V~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P#r!Q![#r![!]*[!]!a%a!b!}#r#Q#R%a#R#o#r#o#p%a#p#q#r#q#r%a#r;'S#r;'S;=`/R<%lO#r~!FypW~Op#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Ns![!]!*e!]!a%a!a!b!LO!b!c#r!c!}##O#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o##O#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~!ISZh~Ow%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a~!IzpW~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Iu![!]*[!]!a%a!a!b!LO!b!c#r!c!}!Iu#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o!Iu#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~!LTWW~!O!P!LO!Q![!LO!a!b!LO!c!}!LO#O#P!LO#R#S!LO#T#o!LO$Lv$Lw!LO~!LroW~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxz%a{|#r|!O%a!O!P!Lm!Q![!Lm![!]*[!]!a%a!a!b!LO!b!c#r!c!}!Lm#O#P!LO#Q#R%a#R#S!Lm#S#T#r#T#o!Lm#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~!NzpV~W~Op#rpq%aqr(krs#rst%atu#ruw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Ns![!]*[!]!a%a!a!b!LO!b!c#r!c!}!Iu#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o!Iu#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~##TpW~Op#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Ns![!]!*e!]!a%a!a!b!LO!b!c#r!c!}#%X#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o#%X#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~#%^pW~Op#rpq%aqr(krs#rst%atu!'Vuw%awx&Vxy!H}yz%a{|#r|!O%a!O!P!Iu!Q![!Ns![!]!*e!]!a%a!a!b!LO!b!c#r!c!}!Iu#O#P!LO#Q#R%a#R#S!Iu#S#T#r#T#o!Iu#o#p%a#p#q#r#q#r%a#r$Lv#r$Lv$Lw!Lm$Lw;'S#r;'S;=`/R<%lO#r~#'iW!h~W~!O!P!LO!Q![!LO!a!b!LO!c!}!LO#O#P!LO#R#S!LO#T#o!LO$Lv$Lw!LOR#(WZ!YPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR#)OZ!cPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%aR#)vZ!fPOw%awx&Vxz%a{!P%a!Q![%a![!]&e!]!a%a!b!}%a#Q;'S%a;'S;=`(e<%lO%a",
  tokenizers: [isIntersecop, separator, decimalSeparator, 0, 1],
  topRules: {"Program":[0,4]},
  specialized: [{term: 70, get: (value, stack) => (isArrayRowSeparator(value) << 1), external: isArrayRowSeparator},{term: 71, get: (value, stack) => (isRefErrorToken(value) << 1), external: isRefErrorToken},{term: 8, get: (value, stack) => (desambiguateNameToken(value) << 1), external: desambiguateNameToken}],
  tokenPrec: 1044
});

const spreadsheetLanguage = LRLanguage.define({
    parser: parser.configure({
        props: [
            indentNodeProp.add({
                Application: delimitedIndent({ closing: ')', align: false })
            }),
            foldNodeProp.add({
                Application: foldInside
            }),
            styleTags({
                // References
                'Reference/...': tags.color,
                RefErrorToken: tags.invalid,
                // Constants
                BoolToken: tags.bool,
                ErrorToken: tags.invalid,
                NumberToken: tags.number,
                TextToken: tags.string,
                // Functions
                Function: tags.function(tags.name),
                // Symbols
                OpenParen: tags.name,
                CloseParen: tags.name,
                '[ ]': tags.squareBracket,
                '{ }': tags.brace
            })
        ]
    })
});
const changeIdiom = setLezerIdiom, changeDecimalSeparator = setDecimalSeparator;
function spreadsheet(idiom = 'en-US', decimalSeparator = ".") {
    setLezerIdiom(idiom);
    setDecimalSeparator(decimalSeparator);
    return new LanguageSupport(spreadsheetLanguage);
}

export { changeDecimalSeparator, changeIdiom, spreadsheet, spreadsheetLanguage };
